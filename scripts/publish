#!/usr/bin/env python3 -u
"""
Upload wheel to PyPI and publish package.
"""
import os
import sys
import subprocess
from shutil import rmtree
from pathlib import Path


def run(cmd, cwd):
    res = subprocess.run(cmd, capture_output=True, cwd=cwd)
    if res.stdout:
        print(res.stdout.decode('utf8'))
    if res.stderr:
        print(res.stderr.decode('utf8'))
    if res.returncode:
        sys.exit(res.returncode)


def find_setup_py():
    for path in Path(__file__).absolute().parents:
        if path.joinpath('setup.py').exists():
            return path
    else:
        print("ERROR: 'setup.py' not found")
        sys.exit(1)


def clean(path):
    for folder in ('dist', 'build'):
        try:
            rmtree(path / folder)
        except FileNotFoundError:
            pass


def build(path):
    cmd = [sys.executable, str(path / 'setup.py'), 'sdist', 'bdist_wheel']
    run(cmd, path)


def publish(path):
    try:
        token = os.environ['PYPI_TOKEN']
    except KeyError:
        print("ERROR: Set PyPI's token in the PYPI_TOKEN environment variable")
        sys.exit(1)

    kwargs = {
        'repository-url': 'https://upload.pypi.org/legacy/',
        'username': '__token__',
        'password': token,
    }
    kwargs = [x for k, v in kwargs.items() for x in (f'--{k}', v)]
    cmd = ['twine', 'upload', *kwargs, '--verbose', './dist/*']
    run(cmd, path)


if __name__ == '__main__':
    path = find_setup_py()
    clean(path)
    build(path)
    publish(path)
